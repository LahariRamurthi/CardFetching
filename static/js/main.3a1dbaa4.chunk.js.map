{"version":3,"sources":["Search.js","App.js","reportWebVitals.js","index.js"],"names":["Search","useState","post","setPost","id","setId","buttonClickId","setButtonClickId","useEffect","axios","get","then","res","console","log","data","catch","err","type","value","onChange","e","target","className","onClick","title","body","App","cards","setCards","visible","setVisible","fetch","json","slice","map","item","prevValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAqCeA,MAjCf,WAAmB,IAAD,EACMC,mBAAS,IADf,mBACZC,EADY,KACLC,EADK,OAECF,mBAAS,GAFV,mBAEZG,EAFY,KAEPC,EAFO,OAGwBJ,mBAAS,GAHjC,mBAGZK,EAHY,KAGIC,EAHJ,KAmBhB,OAXFC,qBAAU,WACRC,IAAMC,IAAN,sDAAyDJ,EAAzD,MACCK,MAAK,SAAAC,GACHC,QAAQC,IAAIF,GACbT,EAAQS,EAAIG,SAEbC,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,QAGd,CAACX,IAEC,gCACA,uBAAOY,KAAK,OAAOC,MAAOf,EAAIgB,SAAW,SAAAC,GAAC,OAAIhB,EAAMgB,EAAEC,OAAOH,QAAQI,UAAU,UAC/E,wBAAQL,KAAK,SAASM,QAjBN,WAClBjB,EAAiBH,IAgB6BmB,UAAU,SAAtD,0BACA,qBAAKA,UAAU,YAAf,SACA,sBAAKA,UAAU,QAAf,UACA,sBAAKA,UAAU,QAAf,UAAuB,0CAAkBrB,EAAKuB,SAC9C,sBAAKF,UAAU,OAAf,UAAsB,yCAAiBrB,EAAKwB,iBCiBjCC,MA5Cf,WAAgB,IAAD,EACY1B,mBAAS,IADrB,mBACP2B,EADO,KACAC,EADA,OAEgB5B,mBAAS,IAFzB,mBAEP6B,EAFO,KAEEC,EAFF,KAwBZ,OAdAvB,qBAAU,WAQPwB,MAAM,gDACLrB,MAAK,SAACC,GAAD,OAASA,EAAIqB,UAClBtB,MAAK,SAACI,GAAD,OAAWc,EAASd,QAPvB,IAYL,sBAAKQ,UAAU,MAAf,UACA,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACCK,EAAMM,MAAM,EAAEJ,GAASK,KAAI,SAACC,GAC7B,OACE,sBAAKb,UAAU,OAAf,UACC,qBAAKA,UAAU,OAGf,4BAAIa,EAAKV,eAKV,wBAAQF,QAlCQ,WACnBO,GAAW,SAACM,GAAD,OAAeA,EAAY,MAiCHd,UAAU,SAA1C,2BC9BSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3a1dbaa4.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport \"./Search.css\";\r\n\r\nfunction Search() {\r\nconst[post , setPost] = useState([]);\r\nconst[id , setId] =useState(1);\r\nconst[buttonClickId , setButtonClickId] = useState(1);\r\n\r\nconst handleClick = () => {\r\n  setButtonClickId(id)\r\n}\r\nuseEffect(() => {\r\n  axios.get(` https://jsonplaceholder.typicode.com/posts/${buttonClickId} `)\r\n  .then(res =>{\r\n     console.log(res)\r\n    setPost(res.data)\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  })\r\n\r\n},[buttonClickId])\r\n  return (\r\n    <div >\r\n    <input type=\"text\" value={id} onChange= {e => setId(e.target.value)} className=\"input\"/>\r\n    <button type=\"button\" onClick={handleClick} className=\"search\">Search By Id</button>\r\n    <div className=\"container\">\r\n    <div className=\"cardd\">\r\n    <div className=\"title\"><h3>TITLE : </h3>{post.title}</div>\r\n    <div className=\"body\"><h5> BODY :</h5>{post.body}</div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import './App.css';\nimport React , {useState,useEffect} from \"react\";\nimport Search from   \"./Search\";\nfunction App() {\n  const[cards, setCards] = useState([]);\n  const[visible, setVisible] = useState(10);\n  \n \nconst loadMoreItems = () =>{\n   setVisible((prevValue) => prevValue + 5);\n}\n\n\n   useEffect(() => {\n      getData();\n\n       },[]);\n       \n\n    function getData(){\n\n      fetch(\" https://jsonplaceholder.typicode.com/posts \")\n      .then((res) => res.json())\n      .then((data) =>  setCards(data));\n \n    }\n\n   return (\n    <div className=\"App\">\n    <Search/>\n    <div className=\"container\">\n    {cards.slice(0,visible).map((item) => {\n    return(\n      <div className=\"card\">\n       <div className=\"id\">\n        \n       </div>\n       <p>{item.body}</p>\n</div>)\n    })}\n    </div>\n  \n      <button onClick={loadMoreItems} className=\"button\">Load More</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}